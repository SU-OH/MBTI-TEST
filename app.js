const express = require('express');
const path = require('path');
const app = express();
const PORT = process.env.PORT || 3000;

// EJS 템플릿 엔진 설정
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

// 정적 파일 제공
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.urlencoded({ extended: false }));
app.use(express.json());

// MBTI 질문 데이터
const questions = [
  {
    id: 1,
    options: [
      "옆 사람에게 먼저 말을 걸어 인사를 나눈다.",
      "주위를 둘러보며 아는 친구를 찾는다.",
      "누가 말을 걸어주길 바라며 주변을 살핀다.",
      "조용히 자리에 앉아 강의 시작을 기다린다."
    ],
    type: ["E", "E", "I", "I"]
  },
  {
    id: 2,
    options: [
      "적극적으로 손을 들고 내 생각을 말한다.",
      "대답할 말이 없더라도 자신감 있게 참여한다.",
      "미리 정리된 생각이 있을 때만 조심스럽게 답한다.",
      "혹 내게 질문이 올까 긴장하며 눈을 피한다."
    ],
    type: ["E", "E", "I", "I"]
  },
  {
    id: 3,
    options: [
      "캠퍼스를 돌아다니며 사람들과 대화를 나눈다.",
      "시간 맞는 친구들과 만나서 카페에 간다.",
      "강의실이나 도서관에서 쉬면서 에너지를 충전한다.",
      "자취방이나 혼자있을 수 있는 공간에서 시간을 보내며 다음 수업 준비를 한다."
    ],
    type: ["E", "E", "I", "I"]
  },
  {
    id: 4,
    options: [
      "팀원들과 친해지기 위해 먼저 대화를 나눈다.",
      "적극적으로 아이디어를 내면서 회의를 이끌어간다.",
      "조용히 듣고 있다가 의견이 필요할 때만 발언한다.",
      "발표보다는 자료조사가 편하다고 말한다."
    ],
    type: ["E", "E", "I", "I"]
  },
  {
    id: 5,
    options: [
      "종강파티를 주도하면서 사람들을 모은다.",
      "\"방학 때도 보자!\" 하며 친구들과 약속을 잡는다.",
      "친한 몇 명과만 따로 만나기로 한다.",
      "조용히 인사만 하고 빠르게 집으로 간다."
    ],
    type: ["E", "E", "I", "I"]
  },
  {
    id: 6,
    options: [
      "다양한 활동을 생각하며 친구들과의 즐거운 시간을 기대하고 있다.",
      "친구들과 놀고 있을 나의 모습을 상상하고 있다.",
      "친구들과 함께할 활동을 고민하며, 즐거운 계획을 세우고 있다.",
      "준비물과 일정을 체크하며 기대감을 높이고 있다."
    ],
    type: ["N", "N", "S", "S"]
  },
  {
    id: 7,
    options: [
      "전체적인 원리와 개념을 먼저 이해하려 한다.",
      "이 개념이 다른 분야에 어떻게 적용될지 생각한다.",
      "실용적인 예시를 통해 개념을 익힌다.",
      "문제를 직접 풀어보면서 개념을 체득한다."
    ],
    type: ["N", "N", "S", "S"]
  },
  {
    id: 8,
    options: [
      "가사가 전해주는 분위기와 메시지에 푹 빠져서 상상에 잠긴다.",
      "이 노래를 들으면 영화 한 장면이 떠올린다.",
      "리듬과 멜로디가 너무 좋아서 저절로 따라 부르게 된다.",
      "보컬의 목소리 톤과 악기 소리에 집중해서 듣게 된다."
    ],
    type: ["N", "N", "S", "S"]
  },
  {
    id: 9,
    options: [
      "집의 인테리어와 조명, 분위기를 상상하며 내가 살고 있는 모습을 그려본다.",
      "집을 어떻게 꾸밀지 상상한다.",
      "집의 크기, 구조, 시설 등을 체크리스트로 만들어서 꼼꼼히 확인한다.",
      "물은 잘 나오는지, 전기는 잘 들어오는지 실용적인 것을 위주로 확인한다."
    ],
    type: ["N", "N", "S", "S"]
  },
  {
    id: 10,
    options: [
      "즉흥적으로 새로운 장소를 탐험하며 분위기를 만끽한다.",
      "여행을 통해 새로운 경험과 영감을 얻고 싶다.",
      "현실적인 준비물을 철저히 챙겨야 안심된다.",
      "세부적인 일정과 교통편을 미리 계획해 둔다."
    ],
    type: ["P", "P", "J", "J"]
  },
  {
    id: 11,
    options: [
      "핵심 개념을 논리적으로 정리하며 집중해서 듣는다.",
      "강의 내용이 이치에 맞는지 분석하며 듣는다.",
      "배운 내용이 사람들에게 어떤 영향을 미칠지 생각한다.",
      "교수님의 말투나 분위기에 따라 몰입도가 달라진다."
    ],
    type: ["T", "T", "F", "F"]
  },
  {
    id: 12,
    options: [
      "감정보다는 사실을 바탕으로 상황을 해결하려 한다.",
      "상대방의 기분보다는 내 논리가 맞다는 걸 증명하는 게 우선이다.",
      "팀원들의 감정을 먼저 살피며 중재하려 한다.",
      "상대방이 기분 나쁘지 않도록 조심스럽게 의견을 낸다."
    ],
    type: ["T", "T", "F", "F"]
  },
  {
    id: 13,
    options: [
      "망한 과목은 빠르게 잊고, 다음 시험에 집중한다.",
      "\"어디서 틀렸지?\" 하며 분석하고 개선 방법을 찾는다.",
      "스스로를 위로하면서 기분을 풀려고 한다.",
      "\"나 너무 못했어...\" 하며 기분이 가라앉는다."
    ],
    type: ["T", "T", "F", "F"]
  },
  {
    id: 14,
    options: [
      "친구에게 위로의 말을 건넨 뒤 속으로 나만 망한 게 아니라 다행이라 생각한다.",
      "다음 시험에는 더 열심히 공부하라고 조언해 준다.",
      "너무 속상해하지 말고, 같이 공부해 보자고 위로한다.",
      "친구와 같은 경험이 있는 내 경험을 이야기하며 친구의 기분을 위로해 준다."
    ],
    type: ["T", "T", "F", "F"]
  },
  {
    id: 15,
    options: [
      "연봉과 안정성을 분석하고 합리적으로 결정한다.",
      "나의 역량이 가장 잘 활용될 수 있는 직업을 선택한다.",
      "사람들과의 관계나 조직의 분위기가 나에게 맞는지를 본다.",
      "내가 행복하게 일할 수 있는지를 가장 중요하게 생각한다."
    ],
    type: ["T", "T", "F", "F"]
  },
  {
    id: 16,
    options: [
      "원하는 강의를 빠르게 신청할 수 있도록 전략을 세운다.",
      "미리 시간표를 짜고 원하는 과목을 정리해 둔다.",
      "인기 강의를 놓치면 다른 과목을 대체하면 된다고 생각한다.",
      "당일에 마음 내키는 대로 선택한다."
    ],
    type: ["J", "J", "P", "P"]
  },
  {
    id: 17,
    options: [
      "계획적으로 시간을 배분하며 차근차근 진행한다.",
      "마감 기한 전에 미리 끝내 놓는다.",
      "필요할 때마다 조금씩 하다가 마지막에 한 번에 끝낸다.",
      "마감 직전에 몰아서 한다."
    ],
    type: ["J", "J", "P", "P"]
  },
  {
    id: 18,
    options: [
      "시험 일정에 맞춰 계획을 세우고 준비한다.",
      "미리 정리한 노트와 자료를 활용해서 공부한다.",
      "내가 하고 싶은 과목 위주로 공부한다.",
      "시험 하루 전날 밤을 새워 공부한다."
    ],
    type: ["J", "J", "P", "P"]
  },
  {
    id: 19,
    options: [
      "시험 결과를 기록하고, 어떤 부분을 개선할지 계획을 세운다.",
      "시험이 끝난 후 바로 복습을 하고 다음 시험 준비를 시작한다.",
      "시험기간에 받은 스트레스를 친구들과 놀러 가서 해소한다.",
      "시험 결과를 생각하지 않고, 즉흥적으로 다른 활동을 즐긴다."
    ],
    type: ["J", "J", "P", "P"]
  },
  {
    id: 20,
    options: [
      "할 일을 정리하고 계획적으로 움직인다.",
      "플래너를 이용해 하루를 철저히 관리하여 갓생러가 되기 위해 노력한다.",
      "중요한 일정만 기억하고 필요할 때 정리한다.",
      "한 학기 동안 고생한 나를 위해 신나는 방학을 즐긴다."
    ],
    type: ["J", "J", "P", "P"]
  }
];

// MBTI 결과 설명
const mbtiDescriptions = {
  "ISTJ": "세상의 소금형: 책임감이 강하고 실용적인 당신은 규칙과 질서를 중요시합니다. 학과 내에서 신뢰받는 존재입니다.",
  "ISFJ": "수호자형: 따뜻한 마음을 가진 책임감 있는 당신은 친구들을 세심하게 챙깁니다. 동아리에서 없어서는 안 될 존재입니다.",
  "INFJ": "예언자형: 통찰력과 직관이 뛰어난 당신은 깊이 있는 대화를 즐깁니다. 친구들은 당신의 조언을 소중히 여깁니다.",
  "INTJ": "과학자형: 전략적 사고와 높은 이해력을 지닌 당신은 독립적이고 창의적입니다. 팀 프로젝트의 방향성을 제시합니다.",
  "ISTP": "장인형: 문제해결능력이 뛰어난 당신은 실용적이고 논리적입니다. 위기상황에서 침착하게 대처합니다.",
  "ISFP": "예술가형: 섬세하고 창의적인 당신은 자신만의 독특한 스타일을 가지고 있습니다. 미적 감각이 뛰어납니다.",
  "INFP": "중재자형: 이상적이고 공감능력이 뛰어난 당신은 자신의 가치관에 충실합니다. 친구들의 고민 상담사 역할을 합니다.",
  "INTP": "논리학자형: 논리적이고 창의적인 당신은 새로운 이론과 아이디어에 관심이 많습니다. 독특한 시각으로 문제를 분석합니다.",
  "ESTP": "사업가형: 활동적이고 적응력이 뛰어난 당신은 즉흥적이고 현실적입니다. 대학 생활의 재미를 놓치지 않습니다.",
  "ESFP": "연예인형: 열정적이고 사교적인 당신은 주변 사람들에게 에너지를 전달합니다. 파티의 중심에 있는 인기인입니다.",
  "ENFP": "활동가형: 열정적이고 창의적인 당신은 가능성을 발견하는 데 뛰어납니다. 다양한 동아리 활동에 참여합니다.",
  "ENTP": "발명가형: 지적 호기심이 많고 논쟁을 즐기는 당신은 창의적인 문제 해결사입니다. 토론 수업에서 빛을 발합니다.",
  "ESTJ": "경영자형: 체계적이고 책임감 있는 당신은 목표를 향해 효율적으로 나아갑니다. 학생회 활동에 적합합니다.",
  "ESFJ": "집정관형: 친절하고 배려심 깊은 당신은 조화로운 관계를 중요시합니다. 학과 모임을 주도적으로 이끌어갑니다.",
  "ENFJ": "언변능숙형: 카리스마 있고 공감능력이 뛰어난 당신은 사람들에게 영감을 줍니다. 좋은 리더십을 발휘합니다.",
  "ENTJ": "통솔자형: 결단력 있고 전략적인 당신은 목표를 설정하고 달성하는 데 탁월합니다. 팀 프로젝트의 리더 역할을 맡습니다."
};

// 라우트 설정
app.get('/', (req, res) => {
  res.render('index');
});

app.get('/test', (req, res) => {
  res.render('test', { 
    question: questions[0],
    currentQuestion: 1,
    totalQuestions: questions.length
  });
});

app.post('/test', (req, res) => {
  const { currentQuestion, answers } = req.body;
  const answersArray = answers ? JSON.parse(answers) : [];
  
  if (req.body.selected) {
    answersArray.push(req.body.selected);
  }
  
  const nextQuestionNum = parseInt(currentQuestion) + 1;
  
  if (nextQuestionNum > questions.length) {
    // 테스트 완료, 결과 계산
    const result = calculateMBTI(answersArray);
    res.render('result', { 
      result: result,
      description: mbtiDescriptions[result]
    });
  } else {
    // 다음 질문으로
    res.render('test', { 
      question: questions[nextQuestionNum - 1],
      currentQuestion: nextQuestionNum,
      totalQuestions: questions.length,
      answers: JSON.stringify(answersArray)
    });
  }
});

// MBTI 결과 계산 함수
function calculateMBTI(answers) {
  let counts = {
    E: 0, I: 0,
    S: 0, N: 0,
    T: 0, F: 0,
    J: 0, P: 0
  };
  
  for (let i = 0; i < answers.length; i++) {
    const questionIndex = Math.floor(i / 4);
    const optionIndex = parseInt(answers[i]) - 1;
    const type = questions[questionIndex].type[optionIndex];
    counts[type]++;
  }
  
  let result = '';
  result += counts.E >= counts.I ? 'E' : 'I';
  result += counts.S >= counts.N ? 'S' : 'N';
  result += counts.T >= counts.F ? 'T' : 'F';
  result += counts.J >= counts.P ? 'J' : 'P';
  
  return result;
}

// 서버 시작
app.listen(PORT, () => {
  console.log(`서버가 http://localhost:${PORT} 에서 실행 중입니다.`);
}); 